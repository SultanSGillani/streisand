# Docker compose for the dev server
#
version: '3'

services:
  api:
    image: registry.pinigseu.xyz/jumpcut/jumpcut:latest
    build:
      context: ./backend
      dockerfile: ./production/Dockerfile
    container_name: api
    depends_on:
    - postgres
    - redis
    env_file: ./backend/.env
    ports:
    - 7070:7070
    - 8000:8000
    restart: always
    volumes:
    - ./backend:/code/
    - ./backend/src/static:/code/src/static/
    - ./frontend/dist:/code/src/static/frontend/dist/
  nginx:
    build:
      context: ./nginx
      dockerfile: ./Dockerfile
    container_name: nginx
    depends_on:
    - api
    - react
    ports:
    - 80:80
    - 443:443
    restart: always
    volumes:
    - ./backend:/usr/share/nginx/
    - ./backend/src/static:/usr/share/nginx/src/static/
    - ./frontend/dist:/usr/share/nginx/html/
  celery:
      image: registry.pinigseu.xyz/jumpcut/jumpcut:latest
      build:
        context: ./backend
        dockerfile: ./production/Dockerfile
      command: bash -c "celery worker --workdir /code/src -A jumpcut -l info"
      environment:
        PYTHONPATH: /code/src
        C_FORCE_ROOT: "true"
        DJANGO_SETTINGS_MODULE: jumpcut.settings.www_settings
      env_file: ./backend/.env
      container_name: celery
      volumes:
      - ./backend/src:/code/src
      depends_on:
      - postgres
      - redis
  react:
    build:
      context: ./frontend
      dockerfile: ./production/Dockerfile
    env_file: ./frontend/.env
    container_name: react
    volumes:
    - ./frontend/src:/react/src/
    - ./frontend/dist:/react/dist/
  postgres:
    image: postgres:alpine
    container_name: db
    volumes:
    - pgdata:/var/lib/postgresql/data/
    ports:
    - 5432:5432
    env_file: ./backend/.env
    restart: always
  redis:
    image: redis:alpine
    container_name: redis
    restart: always
volumes:
  pgdata:
