# Docker compose for the dev server
#
version: '3'

services:
  api:
    build:
      context: ./backend
      dockerfile: Dockerfile-production
    container_name: api
    depends_on:
    - postgres
    - redis
    env_file: ./backend/.env
    ports:
    - 7070:7070
    - 8000:8000
    restart: always
    volumes:
    - ./backend:/code/
    - ./backend/src:/code/src/
    - ./backend/src/static:/code/src/static/
    - ./frontend/dist:/code/src/static/frontend/dist/
  celery:
    image: registry.pinigseu.xyz/jumpcut/jumpcut/production:master
    environment:
      PYTHONPATH: /code/src
      DJANGO_SETTINGS_MODULE: jumpcut.settings.www_settings
    env_file: ./backend/.env
    container_name: celery
    volumes:
    - ./backend/src:/code/src
    depends_on:
    - postgres
    - redis
    - api
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile-production
    container_name: frontend
    environment:
      NODE_ENV: production
    volumes:
    - ./frontend/dist:/code/dist/
  nginx:
    build:
          context: ./nginx
          dockerfile: Dockerfile
    container_name: nginx
    depends_on:
    - api
    - frontend
    ports:
    - 8001:8001
    - 4000:4000
    volumes:
    - ./backend/src:/usr/share/nginx/django/
    - ./backend/src/static:/usr/share/nginx/django/static/
    - ./frontend/dist:/usr/share/nginx/html/
  postgres:
    image: postgres:latest
    container_name: db
    volumes:
    - pgdata:/var/lib/postgresql/data/
    ports:
    - 5432:5432
    env_file: ./backend/.env
    restart: always
  redis:
    image: redis:latest
    container_name: redis
    restart: always
volumes:
  pgdata:
