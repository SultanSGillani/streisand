# Docker compose for the dev server
#
version: '3'

services:
  api:
    image: gitlab.pinigseu.xyz:4567/jumpcut/jumpcut:latest
    container_name: api
    volumes:
    - ./backend/src:/code/src/
    build:
      context: ./backend
      dockerfile: ./production/Dockerfile
    ports:
    - 7070:7070
    - 8000:8000
    networks:
     - jumpcut
    env_file: ./backend/.env
    depends_on:
    - postgres
    - redis
    restart: always
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.1.4
    container_name: elasticsearch
    hostname: elasticsearch
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
     - jumpcut
    depends_on:
    - api
    - postgres
  celerybeat:
    image: gitlab.pinigseu.xyz:4567/jumpcut/jumpcut:latest
    command: bash -c "celery beat --workdir /code/src -A jumpcut -l info"
    container_name: celerybeat
    volumes:
    - ./backend/src:/code/src
    env_file: ./backend/.env
    environment:
      C_FORCE_ROOT: 'true'
      DJANGO_SETTINGS_MODULE: jumpcut.settings.www_settings
      PYTHONPATH: /code/src
    depends_on:
    - celeryworker
    - postgres
    - redis
    networks:
     - jumpcut
  celeryworker:
    image: gitlab.pinigseu.xyz:4567/jumpcut/jumpcut:latest
    command: bash -c "celery worker --workdir /code/src -A jumpcut -l info"
    container_name: celeryworker
    volumes:
    - ./backend/src:/code/src
    env_file: ./backend/.env
    environment:
      C_FORCE_ROOT: 'true'
      DJANGO_SETTINGS_MODULE: jumpcut.settings.www_settings
      PYTHONPATH: /code/src
    depends_on:
    - api
    - postgres
    - redis
    - elasticsearch
    networks:
     - jumpcut
  nginx_react:
    build:
      context: ./frontend
      dockerfile: ./production/Dockerfile
    container_name: nginx_react
    depends_on:
    - api
    env_file: ./frontend/.env
    networks:
     - jumpcut
    ports:
    - 443:443
    - 80:80
    restart: always
    volumes:
    - ./backend/src:/usr/share/nginx/src/
  postgres:
    image: postgres:alpine
    container_name: db
    volumes:
    - pgdata:/var/lib/postgresql/data/
    networks:
     - jumpcut
    ports:
    - 5432:5432
    env_file: ./backend/.env
    restart: always
  redis:
    image: redis:alpine
    container_name: redis
    ports:
     - "6379:6379"
    networks:
     - jumpcut
    restart: always

volumes:
  pgdata:
  esdata:

networks:
  jumpcut:
