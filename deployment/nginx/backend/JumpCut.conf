server {

	listen 80;
	server_name ronzertnert.me;
	charset utf-8;
	return 301 https://www.ronzertnert.me$request_uri;
}
server {

	server_name www.ronzertnert.me;
	root /vagrant/JumpCut/streisand;
	listen 443;
	ssl on;
	#	modsecurity on;
	#	    modsecurity_rules_file /etc/nginx/modsec/main.conf;
	charset utf-8;
	ssl_certificate /etc/letsencrypt/live/ronzertnert.me/fullchain.pem; # managed by Certbot
	ssl_certificate_key /etc/letsencrypt/live/ronzertnert.me/privkey.pem; # managed by Certbot
	ssl_session_cache shared:le_nginx_SSL:1m; # managed by Certbot
	ssl_session_timeout 1440m; # managed by Certbot

	ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # managed by Certbot
	ssl_prefer_server_ciphers on; # managed by Certbot

	ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256 ECDHE-ECDSA-AES256-GCM-SHA384 ECDHE-ECDSA-AES128-SHA ECDHE-ECDSA-AES256-SHA ECDHE-ECDSA-AES128-SHA256 ECDHE-ECDSA-AES256-SHA384 ECDHE-RSA-AES128-GCM-SHA256 ECDHE-RSA-AES256-GCM-SHA384 ECDHE-RSA-AES128-SHA ECDHE-RSA-AES128-SHA256 ECDHE-RSA-AES256-SHA384 DHE-RSA-AES128-GCM-SHA256 DHE-RSA-AES256-GCM-SHA384 DHE-RSA-AES128-SHA DHE-RSA-AES256-SHA DHE-RSA-AES128-SHA256 DHE-RSA-AES256-SHA256 EDH-RSA-DES-CBC3-SHA"; # managed by Certbot


	client_max_body_size 4G;

	location / {
		 # Simple requests
    if ($request_method ~* "(GET|POST)") {
      add_header "Access-Control-Allow-Origin"  *;
    }

    # Preflighted requests
    if ($request_method = OPTIONS ) {
      add_header "Access-Control-Allow-Origin"  *;
      add_header "Access-Control-Allow-Methods" "GET, POST, OPTIONS, HEAD";
      add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept";
      return 200;
    }

		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto https; # <-
		proxy_set_header 'Access-Control-Allow-Headers' 'X-Requested-With,Accept,Content-Type, Origin';
		proxy_set_header X-NginX-Proxy true;

		proxy_redirect off;
		proxy_set_header Host $http_host;
		proxy_pass http://127.0.0.1:8000;

	}

}

