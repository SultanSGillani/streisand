# Docker compose for the dev server
#
version: '3'

services:
  api:
    image: registry.pinigseu.xyz/jumpcut/jumpcut/api:latest
    command: /code/uwsgi.sh
    container_name: api
    volumes:
    - staticdata:/code/src/static/
    - tempdata:/tmp/
    - ./backend/docs:/code/docs/
    ports:
    - 7070:7070
    - 8000:8000
    environment:
      ENVIRONMENT_FILE: ./.env
    env_file: ./backend/.env
    depends_on:
    - postgres
    - redis
    restart: always
  celerybeat:
    image: registry.pinigseu.xyz/jumpcut/jumpcut/api:latest
    command: celery beat --workdir /code/src -A jumpcut -l info
    container_name: celerybeat
    volumes:
    - ./backend/src:/code/src
    env_file: ./backend/.env
    environment:
      C_FORCE_ROOT: 'true'
      DJANGO_SETTINGS_MODULE: jumpcut.settings.www_settings
      PYTHONPATH: /code/src
    depends_on:
    - celeryworker
    - postgres
    - redis
  celeryworker:
    image: registry.pinigseu.xyz/jumpcut/jumpcut/api:latest
    command: celery worker --workdir /code/src -A jumpcut -l info
    container_name: celeryworker
    volumes:
    - ./backend/src:/code/src
    env_file: ./backend/.env
    environment:
      C_FORCE_ROOT: 'true'
      DJANGO_SETTINGS_MODULE: jumpcut.settings.www_settings
      PYTHONPATH: /code/src
    depends_on:
    - api
    - postgres
    - redis
  nginx_react:
    image: registry.pinigseu.xyz/jumpcut/jumpcut/react:prod
    build:
      context: ./frontend
      dockerfile: ./production/Dockerfile
    container_name: nginx_react
    depends_on:
    - api
    - encrypt
    env_file: ./frontend/.env
    environment:
    - NODE_ENV=production
    - APIURL=${APIURL}
    - LETSENCRYPT_USER_MAIL=${LETSENCRYPT_USER_MAIL}
    - LEXICON_PROVIDER=${LEXICON_PROVIDER}
    - LEXICON_NAMECHEAP_AUTH_TOKEN=${LEXICON_NAMECHEAP_AUTH_TOKEN}
    - LEXICON_NAMECHEAP_AUTH_CLIENT_IP=${LEXICON_NAMECHEAP_AUTH_CLIENT_IP}
    - LEXICON_NAMECHEAP_AUTH_USERNAME=${LEXICON_NAMECHEAP_AUTH_USERNAME}
    - LEXICON_PROVIDER_OPTIONS=${LEXICON_PROVIDER_OPTIONS}
    - ENVIRONMENT_FILE=./.env

    ports:
    - 443:443
    - 80:80
    restart: always
    volumes:
    - staticdata:/static/
    - tempdata:/usr/share/nginx/src/
    - /etc/letsencrypt:/etc/nginx/ssl/letsencrypt/
  encrypt:
     image: adferrand/letsencrypt-dns:latest
     env_file: ./frontend/.env
     volumes:
       - /etc/letsencrypt:/etc/letsencrypt
  postgres:
    image: postgres:alpine
    container_name: db
    volumes:
    - pgdata:/var/lib/postgresql/data/
    ports:
    - 5432:5432
    env_file: ./backend/.env
    restart: always
  redis:
    image: redis:alpine
    container_name: redis
    restart: always
volumes:
  pgdata:
  staticdata:
  tempdata:
  