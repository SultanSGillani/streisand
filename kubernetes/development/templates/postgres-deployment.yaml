apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -c
    kompose.version: 1.13.0 (84fa826)
  creationTimestamp: null
  labels:
    io.kompose.service: postgres
  name: postgres
spec:
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: postgres
    spec:
      containers:
      - env:
        - name: ALLOWED_HOSTS
          valueFrom:
            configMapKeyRef:
              key: ALLOWED_HOSTS
              name: postgres-env
        - name: BANDIT_EMAIL
          valueFrom:
            configMapKeyRef:
              key: BANDIT_EMAIL
              name: postgres-env
        - name: CORS_ORIGIN_ALLOW_ALL
          valueFrom:
            configMapKeyRef:
              key: CORS_ORIGIN_ALLOW_ALL
              name: postgres-env
        - name: CORS_URL_REGEX
          valueFrom:
            configMapKeyRef:
              key: CORS_URL_REGEX
              name: postgres-env
        - name: DATABASE_URL
          valueFrom:
            configMapKeyRef:
              key: DATABASE_URL
              name: postgres-env
        - name: DEBUG
          valueFrom:
            configMapKeyRef:
              key: DEBUG
              name: postgres-env
        - name: DEFAULT_FROM_EMAIL
          valueFrom:
            configMapKeyRef:
              key: DEFAULT_FROM_EMAIL
              name: postgres-env
        - name: DEFAULT_REPLY_TO_EMAIL
          valueFrom:
            configMapKeyRef:
              key: DEFAULT_REPLY_TO_EMAIL
              name: postgres-env
        - name: EMAIL_HOST
          valueFrom:
            configMapKeyRef:
              key: EMAIL_HOST
              name: postgres-env
        - name: EMAIL_HOST_PASSWORD
          valueFrom:
            configMapKeyRef:
              key: EMAIL_HOST_PASSWORD
              name: postgres-env
        - name: EMAIL_HOST_USER
          valueFrom:
            configMapKeyRef:
              key: EMAIL_HOST_USER
              name: postgres-env
        - name: EMAIL_PORT
          valueFrom:
            configMapKeyRef:
              key: EMAIL_PORT
              name: postgres-env
        - name: EMAIL_USE_TLS
          valueFrom:
            configMapKeyRef:
              key: EMAIL_USE_TLS
              name: postgres-env
        - name: HOST
          valueFrom:
            configMapKeyRef:
              key: HOST
              name: postgres-env
        - name: HOST_IP
          valueFrom:
            configMapKeyRef:
              key: HOST_IP
              name: postgres-env
        - name: MYSQLDB_NAME
          valueFrom:
            configMapKeyRef:
              key: MYSQLDB_NAME
              name: postgres-env
        - name: MYSQL_HOST
          valueFrom:
            configMapKeyRef:
              key: MYSQL_HOST
              name: postgres-env
        - name: MYSQL_PORT
          valueFrom:
            configMapKeyRef:
              key: MYSQL_PORT
              name: postgres-env
        - name: MYSQL_PWD
          valueFrom:
            configMapKeyRef:
              key: MYSQL_PWD
              name: postgres-env
        - name: MYSQL_USER
          valueFrom:
            configMapKeyRef:
              key: MYSQL_USER
              name: postgres-env
        - name: OLD_SITE_HASH
          valueFrom:
            configMapKeyRef:
              key: OLD_SITE_HASH
              name: postgres-env
        - name: PRODUCTION
          valueFrom:
            configMapKeyRef:
              key: PRODUCTION
              name: postgres-env
        - name: REDIS_URL
          valueFrom:
            configMapKeyRef:
              key: REDIS_URL
              name: postgres-env
        - name: RT_API_KEY
          valueFrom:
            configMapKeyRef:
              key: RT_API_KEY
              name: postgres-env
        - name: SECRET_KEY
          valueFrom:
            configMapKeyRef:
              key: SECRET_KEY
              name: postgres-env
        - name: SITE_NAME
          valueFrom:
            configMapKeyRef:
              key: SITE_NAME
              name: postgres-env
        - name: SITE_URL
          valueFrom:
            configMapKeyRef:
              key: SITE_URL
              name: postgres-env
        - name: TESTING_DB_HOST
          valueFrom:
            configMapKeyRef:
              key: TESTING_DB_HOST
              name: postgres-env
        - name: TESTING_DB_NAME
          valueFrom:
            configMapKeyRef:
              key: TESTING_DB_NAME
              name: postgres-env
        - name: TESTING_DB_PASS
          valueFrom:
            configMapKeyRef:
              key: TESTING_DB_PASS
              name: postgres-env
        - name: TESTING_DB_PORT
          valueFrom:
            configMapKeyRef:
              key: TESTING_DB_PORT
              name: postgres-env
        - name: TESTING_DB_SERVICE
          valueFrom:
            configMapKeyRef:
              key: TESTING_DB_SERVICE
              name: postgres-env
        - name: TESTING_DB_USER
          valueFrom:
            configMapKeyRef:
              key: TESTING_DB_USER
              name: postgres-env
        - name: TESTING_WSGI_APPLICATION
          valueFrom:
            configMapKeyRef:
              key: TESTING_WSGI_APPLICATION
              name: postgres-env
        - name: TEST_RUNNER
          valueFrom:
            configMapKeyRef:
              key: TEST_RUNNER
              name: postgres-env
        - name: TRACKER_URL
          valueFrom:
            configMapKeyRef:
              key: TRACKER_URL
              name: postgres-env
        image: postgres:alpine
        name: db_dev
        ports:
        - containerPort: 5432
        resources: {}
        volumeMounts:
        - mountPath: /var/lib/postgresql/data/
          name: pgdata
      restartPolicy: Always
      volumes:
      - name: pgdata
        persistentVolumeClaim:
          claimName: pgdata
status: {}
