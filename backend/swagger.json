{
    "swagger": "2.0",
    "info": {
        "title": "Streisand API",
        "description": "Streisand API Swagger Definition",
        "termsOfService": "https://www.something.com/policies/terms/",
        "contact": {
            "email": "contact@something.xyz"
        },
        "license": {
            "name": "MIT License"
        },
        "version": "v1"
    },
    "basePath": "/api/v1",
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "securityDefinitions": {
        "Basic": {
            "type": "basic"
        }
    },
    "security": [
        {
            "Basic": []
        }
    ],
    "paths": {
        "/change-password/": {
            "put": {
                "operationId": "change-password_update",
                "description": "An endpoint for changing password.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ChangePassword"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ChangePassword"
                        }
                    }
                },
                "tags": [
                    "change-password"
                ]
            },
            "patch": {
                "operationId": "change-password_partial_update",
                "description": "An endpoint for changing password.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ChangePassword"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ChangePassword"
                        }
                    }
                },
                "tags": [
                    "change-password"
                ]
            },
            "parameters": []
        },
        "/collection-comments/": {
            "get": {
                "operationId": "collection-comments_list",
                "description": "API endpoint that allows film-collection-comments to be viewed or edited.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/CollectionComment"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "collection-comments"
                ]
            },
            "post": {
                "operationId": "collection-comments_create",
                "description": "API endpoint that allows film-collection-comments to be viewed or edited.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CollectionComment"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CollectionComment"
                        }
                    }
                },
                "tags": [
                    "collection-comments"
                ]
            },
            "parameters": []
        },
        "/collection-comments/{id}/": {
            "get": {
                "operationId": "collection-comments_read",
                "description": "API endpoint that allows film-collection-comments to be viewed or edited.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CollectionComment"
                        }
                    }
                },
                "tags": [
                    "collection-comments"
                ]
            },
            "put": {
                "operationId": "collection-comments_update",
                "description": "API endpoint that allows film-collection-comments to be viewed or edited.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CollectionComment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CollectionComment"
                        }
                    }
                },
                "tags": [
                    "collection-comments"
                ]
            },
            "patch": {
                "operationId": "collection-comments_partial_update",
                "description": "API endpoint that allows film-collection-comments to be viewed or edited.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CollectionComment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CollectionComment"
                        }
                    }
                },
                "tags": [
                    "collection-comments"
                ]
            },
            "delete": {
                "operationId": "collection-comments_delete",
                "description": "API endpoint that allows film-collection-comments to be viewed or edited.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "collection-comments"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this collection comment.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/collections/": {
            "get": {
                "operationId": "collections_list",
                "description": "API endpoint that allows film-collections to be viewed or edited.",
                "parameters": [
                    {
                        "name": "title",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "film__title",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "creator__username",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Collection"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "collections"
                ]
            },
            "post": {
                "operationId": "collections_create",
                "description": "API endpoint that allows film-collections to be viewed or edited.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Collection"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Collection"
                        }
                    }
                },
                "tags": [
                    "collections"
                ]
            },
            "parameters": []
        },
        "/collections/{id}/": {
            "get": {
                "operationId": "collections_read",
                "description": "API endpoint that allows film-collections to be viewed or edited.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Collection"
                        }
                    }
                },
                "tags": [
                    "collections"
                ]
            },
            "put": {
                "operationId": "collections_update",
                "description": "API endpoint that allows film-collections to be viewed or edited.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Collection"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Collection"
                        }
                    }
                },
                "tags": [
                    "collections"
                ]
            },
            "patch": {
                "operationId": "collections_partial_update",
                "description": "API endpoint that allows film-collections to be viewed or edited.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Collection"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Collection"
                        }
                    }
                },
                "tags": [
                    "collections"
                ]
            },
            "delete": {
                "operationId": "collections_delete",
                "description": "API endpoint that allows film-collections to be viewed or edited.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "collections"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this collection.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/current-user/": {
            "get": {
                "operationId": "current-user_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/OwnedUserProfile"
                        }
                    }
                },
                "tags": [
                    "current-user"
                ]
            },
            "parameters": []
        },
        "/film-comments/": {
            "get": {
                "operationId": "film-comments_list",
                "description": "API endpoint that allows film-comments to be viewed or edited.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/FilmComment"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "film-comments"
                ]
            },
            "post": {
                "operationId": "film-comments_create",
                "description": "API endpoint that allows film-comments to be viewed or edited.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FilmComment"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/FilmComment"
                        }
                    }
                },
                "tags": [
                    "film-comments"
                ]
            },
            "parameters": []
        },
        "/film-comments/{id}/": {
            "get": {
                "operationId": "film-comments_read",
                "description": "API endpoint that allows film-comments to be viewed or edited.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/FilmComment"
                        }
                    }
                },
                "tags": [
                    "film-comments"
                ]
            },
            "put": {
                "operationId": "film-comments_update",
                "description": "API endpoint that allows film-comments to be viewed or edited.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FilmComment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/FilmComment"
                        }
                    }
                },
                "tags": [
                    "film-comments"
                ]
            },
            "patch": {
                "operationId": "film-comments_partial_update",
                "description": "API endpoint that allows film-comments to be viewed or edited.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FilmComment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/FilmComment"
                        }
                    }
                },
                "tags": [
                    "film-comments"
                ]
            },
            "delete": {
                "operationId": "film-comments_delete",
                "description": "API endpoint that allows film-comments to be viewed or edited.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "film-comments"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this film comment.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/films/": {
            "get": {
                "operationId": "films_list",
                "description": "API endpoint that allows films to be viewed or edited.",
                "parameters": [
                    {
                        "name": "title",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "tags",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "year",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/AdminFilm"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "films"
                ]
            },
            "post": {
                "operationId": "films_create",
                "description": "API endpoint that allows films to be viewed or edited.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AdminFilm"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/AdminFilm"
                        }
                    }
                },
                "tags": [
                    "films"
                ]
            },
            "parameters": []
        },
        "/films/{id}/": {
            "get": {
                "operationId": "films_read",
                "description": "API endpoint that allows films to be viewed or edited.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/AdminFilm"
                        }
                    }
                },
                "tags": [
                    "films"
                ]
            },
            "put": {
                "operationId": "films_update",
                "description": "API endpoint that allows films to be viewed or edited.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AdminFilm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/AdminFilm"
                        }
                    }
                },
                "tags": [
                    "films"
                ]
            },
            "patch": {
                "operationId": "films_partial_update",
                "description": "API endpoint that allows films to be viewed or edited.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AdminFilm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/AdminFilm"
                        }
                    }
                },
                "tags": [
                    "films"
                ]
            },
            "delete": {
                "operationId": "films_delete",
                "description": "API endpoint that allows films to be viewed or edited.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "films"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this film.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/forum-group-items/": {
            "post": {
                "operationId": "forum-group-items_create",
                "description": "API endpoint for Forum Groups. This should be mainly used for POST, PATCH, and DELETE requests only.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ForumGroupItem"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ForumGroupItem"
                        }
                    }
                },
                "tags": [
                    "forum-group-items"
                ]
            },
            "parameters": []
        },
        "/forum-group-items/{id}/": {
            "get": {
                "operationId": "forum-group-items_read",
                "description": "API endpoint for Forum Groups. This should be mainly used for POST, PATCH, and DELETE requests only.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ForumGroupItem"
                        }
                    }
                },
                "tags": [
                    "forum-group-items"
                ]
            },
            "put": {
                "operationId": "forum-group-items_update",
                "description": "API endpoint for Forum Groups. This should be mainly used for POST, PATCH, and DELETE requests only.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ForumGroupItem"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ForumGroupItem"
                        }
                    }
                },
                "tags": [
                    "forum-group-items"
                ]
            },
            "patch": {
                "operationId": "forum-group-items_partial_update",
                "description": "API endpoint for Forum Groups. This should be mainly used for POST, PATCH, and DELETE requests only.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ForumGroupItem"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ForumGroupItem"
                        }
                    }
                },
                "tags": [
                    "forum-group-items"
                ]
            },
            "delete": {
                "operationId": "forum-group-items_delete",
                "description": "API endpoint for Forum Groups. This should be mainly used for POST, PATCH, and DELETE requests only.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "forum-group-items"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this forum group.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/forum-index/": {
            "get": {
                "operationId": "forum-index_list",
                "description": "API endpoint for an overall Forum Index GET request.",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ForumIndex"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "forum-index"
                ]
            },
            "post": {
                "operationId": "forum-index_create",
                "description": "API endpoint for an overall Forum Index GET request.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ForumIndex"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ForumIndex"
                        }
                    }
                },
                "tags": [
                    "forum-index"
                ]
            },
            "parameters": []
        },
        "/forum-index/{id}/": {
            "get": {
                "operationId": "forum-index_read",
                "description": "API endpoint for an overall Forum Index GET request.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ForumIndex"
                        }
                    }
                },
                "tags": [
                    "forum-index"
                ]
            },
            "put": {
                "operationId": "forum-index_update",
                "description": "API endpoint for an overall Forum Index GET request.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ForumIndex"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ForumIndex"
                        }
                    }
                },
                "tags": [
                    "forum-index"
                ]
            },
            "patch": {
                "operationId": "forum-index_partial_update",
                "description": "API endpoint for an overall Forum Index GET request.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ForumIndex"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ForumIndex"
                        }
                    }
                },
                "tags": [
                    "forum-index"
                ]
            },
            "delete": {
                "operationId": "forum-index_delete",
                "description": "API endpoint for an overall Forum Index GET request.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "forum-index"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this forum group.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/forum-post-items/": {
            "post": {
                "operationId": "forum-post-items_create",
                "description": "API endpoint for Forum Posts. This should be mainly used for POST, PATCH, and DELETE requests only.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ForumPostItem"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ForumPostItem"
                        }
                    }
                },
                "tags": [
                    "forum-post-items"
                ]
            },
            "parameters": []
        },
        "/forum-post-items/{id}/": {
            "get": {
                "operationId": "forum-post-items_read",
                "description": "API endpoint for Forum Posts. This should be mainly used for POST, PATCH, and DELETE requests only.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ForumPostItem"
                        }
                    }
                },
                "tags": [
                    "forum-post-items"
                ]
            },
            "put": {
                "operationId": "forum-post-items_update",
                "description": "API endpoint for Forum Posts. This should be mainly used for POST, PATCH, and DELETE requests only.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ForumPostItem"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ForumPostItem"
                        }
                    }
                },
                "tags": [
                    "forum-post-items"
                ]
            },
            "patch": {
                "operationId": "forum-post-items_partial_update",
                "description": "API endpoint for Forum Posts. This should be mainly used for POST, PATCH, and DELETE requests only.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ForumPostItem"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ForumPostItem"
                        }
                    }
                },
                "tags": [
                    "forum-post-items"
                ]
            },
            "delete": {
                "operationId": "forum-post-items_delete",
                "description": "API endpoint for Forum Posts. This should be mainly used for POST, PATCH, and DELETE requests only.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "forum-post-items"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this forum post.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/forum-reports/": {
            "get": {
                "operationId": "forum-reports_list",
                "description": "API endpoint For Reporting Forum threads/posts.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ForumReport"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "forum-reports"
                ]
            },
            "post": {
                "operationId": "forum-reports_create",
                "description": "API endpoint For Reporting Forum threads/posts.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ForumReport"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ForumReport"
                        }
                    }
                },
                "tags": [
                    "forum-reports"
                ]
            },
            "parameters": []
        },
        "/forum-reports/{id}/": {
            "get": {
                "operationId": "forum-reports_read",
                "description": "API endpoint For Reporting Forum threads/posts.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ForumReport"
                        }
                    }
                },
                "tags": [
                    "forum-reports"
                ]
            },
            "put": {
                "operationId": "forum-reports_update",
                "description": "API endpoint For Reporting Forum threads/posts.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ForumReport"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ForumReport"
                        }
                    }
                },
                "tags": [
                    "forum-reports"
                ]
            },
            "patch": {
                "operationId": "forum-reports_partial_update",
                "description": "API endpoint For Reporting Forum threads/posts.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ForumReport"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ForumReport"
                        }
                    }
                },
                "tags": [
                    "forum-reports"
                ]
            },
            "delete": {
                "operationId": "forum-reports_delete",
                "description": "API endpoint For Reporting Forum threads/posts.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "forum-reports"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this forum report.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/forum-thread-index/": {
            "get": {
                "operationId": "forum-thread-index_list",
                "description": "API endpoint for Forum Threads. This should be mainly used for GET requests only.",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ForumThreadIndex"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "forum-thread-index"
                ]
            },
            "post": {
                "operationId": "forum-thread-index_create",
                "description": "API endpoint for Forum Threads. This should be mainly used for GET requests only.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ForumThreadIndex"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ForumThreadIndex"
                        }
                    }
                },
                "tags": [
                    "forum-thread-index"
                ]
            },
            "parameters": []
        },
        "/forum-thread-index/{id}/": {
            "get": {
                "operationId": "forum-thread-index_read",
                "description": "API endpoint for Forum Threads. This should be mainly used for GET requests only.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ForumThreadIndex"
                        }
                    }
                },
                "tags": [
                    "forum-thread-index"
                ]
            },
            "put": {
                "operationId": "forum-thread-index_update",
                "description": "API endpoint for Forum Threads. This should be mainly used for GET requests only.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ForumThreadIndex"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ForumThreadIndex"
                        }
                    }
                },
                "tags": [
                    "forum-thread-index"
                ]
            },
            "patch": {
                "operationId": "forum-thread-index_partial_update",
                "description": "API endpoint for Forum Threads. This should be mainly used for GET requests only.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ForumThreadIndex"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ForumThreadIndex"
                        }
                    }
                },
                "tags": [
                    "forum-thread-index"
                ]
            },
            "delete": {
                "operationId": "forum-thread-index_delete",
                "description": "API endpoint for Forum Threads. This should be mainly used for GET requests only.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "forum-thread-index"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this forum thread.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/forum-thread-items/": {
            "post": {
                "operationId": "forum-thread-items_create",
                "description": "API endpoint for Forum Topics. This should be mainly used for POST, PATCH, and DELETE requests only.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ForumThreadItem"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ForumThreadItem"
                        }
                    }
                },
                "tags": [
                    "forum-thread-items"
                ]
            },
            "parameters": []
        },
        "/forum-thread-items/{id}/": {
            "get": {
                "operationId": "forum-thread-items_read",
                "description": "API endpoint for Forum Topics. This should be mainly used for POST, PATCH, and DELETE requests only.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ForumThreadItem"
                        }
                    }
                },
                "tags": [
                    "forum-thread-items"
                ]
            },
            "put": {
                "operationId": "forum-thread-items_update",
                "description": "API endpoint for Forum Topics. This should be mainly used for POST, PATCH, and DELETE requests only.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ForumThreadItem"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ForumThreadItem"
                        }
                    }
                },
                "tags": [
                    "forum-thread-items"
                ]
            },
            "patch": {
                "operationId": "forum-thread-items_partial_update",
                "description": "API endpoint for Forum Topics. This should be mainly used for POST, PATCH, and DELETE requests only.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ForumThreadItem"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ForumThreadItem"
                        }
                    }
                },
                "tags": [
                    "forum-thread-items"
                ]
            },
            "delete": {
                "operationId": "forum-thread-items_delete",
                "description": "API endpoint for Forum Topics. This should be mainly used for POST, PATCH, and DELETE requests only.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "forum-thread-items"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this forum thread.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/forum-thread-subscriptions/": {
            "get": {
                "operationId": "forum-thread-subscriptions_list",
                "description": "API endpoint that allows thread subscriptions to be viewed, or edited.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ForumThreadSubscription"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "forum-thread-subscriptions"
                ]
            },
            "post": {
                "operationId": "forum-thread-subscriptions_create",
                "description": "API endpoint that allows thread subscriptions to be viewed, or edited.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ForumThreadSubscription"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ForumThreadSubscription"
                        }
                    }
                },
                "tags": [
                    "forum-thread-subscriptions"
                ]
            },
            "parameters": []
        },
        "/forum-thread-subscriptions/{id}/": {
            "get": {
                "operationId": "forum-thread-subscriptions_read",
                "description": "API endpoint that allows thread subscriptions to be viewed, or edited.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ForumThreadSubscription"
                        }
                    }
                },
                "tags": [
                    "forum-thread-subscriptions"
                ]
            },
            "put": {
                "operationId": "forum-thread-subscriptions_update",
                "description": "API endpoint that allows thread subscriptions to be viewed, or edited.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ForumThreadSubscription"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ForumThreadSubscription"
                        }
                    }
                },
                "tags": [
                    "forum-thread-subscriptions"
                ]
            },
            "patch": {
                "operationId": "forum-thread-subscriptions_partial_update",
                "description": "API endpoint that allows thread subscriptions to be viewed, or edited.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ForumThreadSubscription"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ForumThreadSubscription"
                        }
                    }
                },
                "tags": [
                    "forum-thread-subscriptions"
                ]
            },
            "delete": {
                "operationId": "forum-thread-subscriptions_delete",
                "description": "API endpoint that allows thread subscriptions to be viewed, or edited.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "forum-thread-subscriptions"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this forum thread subscription.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/forum-topic-index/": {
            "get": {
                "operationId": "forum-topic-index_list",
                "description": "API endpoint for Forum Topics. This should be mainly used for GET requests only.",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ForumTopicIndex"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "forum-topic-index"
                ]
            },
            "post": {
                "operationId": "forum-topic-index_create",
                "description": "API endpoint for Forum Topics. This should be mainly used for GET requests only.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ForumTopicIndex"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ForumTopicIndex"
                        }
                    }
                },
                "tags": [
                    "forum-topic-index"
                ]
            },
            "parameters": []
        },
        "/forum-topic-index/{id}/": {
            "get": {
                "operationId": "forum-topic-index_read",
                "description": "API endpoint for Forum Topics. This should be mainly used for GET requests only.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ForumTopicIndex"
                        }
                    }
                },
                "tags": [
                    "forum-topic-index"
                ]
            },
            "put": {
                "operationId": "forum-topic-index_update",
                "description": "API endpoint for Forum Topics. This should be mainly used for GET requests only.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ForumTopicIndex"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ForumTopicIndex"
                        }
                    }
                },
                "tags": [
                    "forum-topic-index"
                ]
            },
            "patch": {
                "operationId": "forum-topic-index_partial_update",
                "description": "API endpoint for Forum Topics. This should be mainly used for GET requests only.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ForumTopicIndex"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ForumTopicIndex"
                        }
                    }
                },
                "tags": [
                    "forum-topic-index"
                ]
            },
            "delete": {
                "operationId": "forum-topic-index_delete",
                "description": "API endpoint for Forum Topics. This should be mainly used for GET requests only.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "forum-topic-index"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this forum topic.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/forum-topic-items/": {
            "post": {
                "operationId": "forum-topic-items_create",
                "description": "API endpoint for Forum Topics. This should be mainly used for POST, PATCH, and DELETE requests only.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ForumTopicItem"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ForumTopicItem"
                        }
                    }
                },
                "tags": [
                    "forum-topic-items"
                ]
            },
            "parameters": []
        },
        "/forum-topic-items/{id}/": {
            "get": {
                "operationId": "forum-topic-items_read",
                "description": "API endpoint for Forum Topics. This should be mainly used for POST, PATCH, and DELETE requests only.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ForumTopicItem"
                        }
                    }
                },
                "tags": [
                    "forum-topic-items"
                ]
            },
            "put": {
                "operationId": "forum-topic-items_update",
                "description": "API endpoint for Forum Topics. This should be mainly used for POST, PATCH, and DELETE requests only.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ForumTopicItem"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ForumTopicItem"
                        }
                    }
                },
                "tags": [
                    "forum-topic-items"
                ]
            },
            "patch": {
                "operationId": "forum-topic-items_partial_update",
                "description": "API endpoint for Forum Topics. This should be mainly used for POST, PATCH, and DELETE requests only.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ForumTopicItem"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ForumTopicItem"
                        }
                    }
                },
                "tags": [
                    "forum-topic-items"
                ]
            },
            "delete": {
                "operationId": "forum-topic-items_delete",
                "description": "API endpoint for Forum Topics. This should be mainly used for POST, PATCH, and DELETE requests only.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "forum-topic-items"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this forum topic.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/groups/": {
            "get": {
                "operationId": "groups_list",
                "description": "API endpoint that allows groups to be viewed or edited.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Group"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "groups"
                ]
            },
            "post": {
                "operationId": "groups_create",
                "description": "API endpoint that allows groups to be viewed or edited.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Group"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Group"
                        }
                    }
                },
                "tags": [
                    "groups"
                ]
            },
            "parameters": []
        },
        "/groups/{id}/": {
            "get": {
                "operationId": "groups_read",
                "description": "API endpoint that allows groups to be viewed or edited.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Group"
                        }
                    }
                },
                "tags": [
                    "groups"
                ]
            },
            "put": {
                "operationId": "groups_update",
                "description": "API endpoint that allows groups to be viewed or edited.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Group"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Group"
                        }
                    }
                },
                "tags": [
                    "groups"
                ]
            },
            "patch": {
                "operationId": "groups_partial_update",
                "description": "API endpoint that allows groups to be viewed or edited.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Group"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Group"
                        }
                    }
                },
                "tags": [
                    "groups"
                ]
            },
            "delete": {
                "operationId": "groups_delete",
                "description": "API endpoint that allows groups to be viewed or edited.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "groups"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this group.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/invites/": {
            "get": {
                "operationId": "invites_list",
                "description": "",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Invite"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "invites"
                ]
            },
            "post": {
                "operationId": "invites_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Invite"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Invite"
                        }
                    }
                },
                "tags": [
                    "invites"
                ]
            },
            "parameters": []
        },
        "/invites/{key}/": {
            "get": {
                "operationId": "invites_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Invite"
                        }
                    }
                },
                "tags": [
                    "invites"
                ]
            },
            "put": {
                "operationId": "invites_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Invite"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Invite"
                        }
                    }
                },
                "tags": [
                    "invites"
                ]
            },
            "patch": {
                "operationId": "invites_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Invite"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Invite"
                        }
                    }
                },
                "tags": [
                    "invites"
                ]
            },
            "delete": {
                "operationId": "invites_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "invites"
                ]
            },
            "parameters": [
                {
                    "name": "key",
                    "in": "path",
                    "description": "A UUID string identifying this invite.",
                    "required": true,
                    "type": "string",
                    "format": "uuid"
                }
            ]
        },
        "/login/": {
            "post": {
                "operationId": "login_create",
                "description": "User Login View",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/JWT"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/JWT"
                        }
                    }
                },
                "tags": [
                    "login"
                ]
            },
            "parameters": []
        },
        "/news-posts/": {
            "get": {
                "operationId": "news-posts_list",
                "description": "API endpoint that allows LatestForumPosts to be viewed, or edited.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/News"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "news-posts"
                ]
            },
            "post": {
                "operationId": "news-posts_create",
                "description": "API endpoint that allows LatestForumPosts to be viewed, or edited.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/News"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/News"
                        }
                    }
                },
                "tags": [
                    "news-posts"
                ]
            },
            "parameters": []
        },
        "/news-posts/{id}/": {
            "get": {
                "operationId": "news-posts_read",
                "description": "API endpoint that allows LatestForumPosts to be viewed, or edited.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/News"
                        }
                    }
                },
                "tags": [
                    "news-posts"
                ]
            },
            "put": {
                "operationId": "news-posts_update",
                "description": "API endpoint that allows LatestForumPosts to be viewed, or edited.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/News"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/News"
                        }
                    }
                },
                "tags": [
                    "news-posts"
                ]
            },
            "patch": {
                "operationId": "news-posts_partial_update",
                "description": "API endpoint that allows LatestForumPosts to be viewed, or edited.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/News"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/News"
                        }
                    }
                },
                "tags": [
                    "news-posts"
                ]
            },
            "delete": {
                "operationId": "news-posts_delete",
                "description": "API endpoint that allows LatestForumPosts to be viewed, or edited.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "news-posts"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/register/": {
            "post": {
                "operationId": "register_create",
                "description": "Register a new user.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NewUser"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/NewUser"
                        }
                    }
                },
                "tags": [
                    "register"
                ]
            },
            "parameters": []
        },
        "/token-refresh/": {
            "post": {
                "operationId": "token-refresh_create",
                "description": "API View that returns a refreshed token (with new expiration) based on\nexisting token\n\nIf 'orig_iat' field (original issued-at-time) is found, will first check\nif it's within expiration window, then copy it to the new token",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RefreshJSONWebToken"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/RefreshJSONWebToken"
                        }
                    }
                },
                "tags": [
                    "token-refresh"
                ]
            },
            "parameters": []
        },
        "/token-verify/": {
            "post": {
                "operationId": "token-verify_create",
                "description": "API View that checks the veracity of a token, returning the token if it\nis valid.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/VerifyJSONWebToken"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/VerifyJSONWebToken"
                        }
                    }
                },
                "tags": [
                    "token-verify"
                ]
            },
            "parameters": []
        },
        "/torrent-clients/": {
            "get": {
                "operationId": "torrent-clients_list",
                "description": "TorrentClient View 1",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/TorrentClient"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "torrent-clients"
                ]
            },
            "post": {
                "operationId": "torrent-clients_create",
                "description": "TorrentClient View 1",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TorrentClient"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TorrentClient"
                        }
                    }
                },
                "tags": [
                    "torrent-clients"
                ]
            },
            "parameters": []
        },
        "/torrent-clients/{peer_id_prefix}/": {
            "get": {
                "operationId": "torrent-clients_read",
                "description": "TorrentClient View 1",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TorrentClient"
                        }
                    }
                },
                "tags": [
                    "torrent-clients"
                ]
            },
            "put": {
                "operationId": "torrent-clients_update",
                "description": "TorrentClient View 1",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TorrentClient"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TorrentClient"
                        }
                    }
                },
                "tags": [
                    "torrent-clients"
                ]
            },
            "patch": {
                "operationId": "torrent-clients_partial_update",
                "description": "TorrentClient View 1",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TorrentClient"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TorrentClient"
                        }
                    }
                },
                "tags": [
                    "torrent-clients"
                ]
            },
            "delete": {
                "operationId": "torrent-clients_delete",
                "description": "TorrentClient View 1",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "torrent-clients"
                ]
            },
            "parameters": [
                {
                    "name": "peer_id_prefix",
                    "in": "path",
                    "description": "A unique value identifying this torrent client.",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/torrent-comments/": {
            "get": {
                "operationId": "torrent-comments_list",
                "description": "API That Allows Torrent Comments to be viewed, created, or deleted. If you delete the associated film or torrent,\nThe comment will be deleted as well.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/TorrentComment"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "torrent-comments"
                ]
            },
            "post": {
                "operationId": "torrent-comments_create",
                "description": "API That Allows Torrent Comments to be viewed, created, or deleted. If you delete the associated film or torrent,\nThe comment will be deleted as well.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TorrentComment"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TorrentComment"
                        }
                    }
                },
                "tags": [
                    "torrent-comments"
                ]
            },
            "parameters": []
        },
        "/torrent-comments/{id}/": {
            "get": {
                "operationId": "torrent-comments_read",
                "description": "API That Allows Torrent Comments to be viewed, created, or deleted. If you delete the associated film or torrent,\nThe comment will be deleted as well.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TorrentComment"
                        }
                    }
                },
                "tags": [
                    "torrent-comments"
                ]
            },
            "put": {
                "operationId": "torrent-comments_update",
                "description": "API That Allows Torrent Comments to be viewed, created, or deleted. If you delete the associated film or torrent,\nThe comment will be deleted as well.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TorrentComment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TorrentComment"
                        }
                    }
                },
                "tags": [
                    "torrent-comments"
                ]
            },
            "patch": {
                "operationId": "torrent-comments_partial_update",
                "description": "API That Allows Torrent Comments to be viewed, created, or deleted. If you delete the associated film or torrent,\nThe comment will be deleted as well.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TorrentComment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TorrentComment"
                        }
                    }
                },
                "tags": [
                    "torrent-comments"
                ]
            },
            "delete": {
                "operationId": "torrent-comments_delete",
                "description": "API That Allows Torrent Comments to be viewed, created, or deleted. If you delete the associated film or torrent,\nThe comment will be deleted as well.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "torrent-comments"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this torrent comment.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/torrent-requests/": {
            "get": {
                "operationId": "torrent-requests_list",
                "description": "",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/TorrentRequest"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "torrent-requests"
                ]
            },
            "post": {
                "operationId": "torrent-requests_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TorrentRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TorrentRequest"
                        }
                    }
                },
                "tags": [
                    "torrent-requests"
                ]
            },
            "parameters": []
        },
        "/torrent-requests/{id}/": {
            "get": {
                "operationId": "torrent-requests_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TorrentRequest"
                        }
                    }
                },
                "tags": [
                    "torrent-requests"
                ]
            },
            "put": {
                "operationId": "torrent-requests_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TorrentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TorrentRequest"
                        }
                    }
                },
                "tags": [
                    "torrent-requests"
                ]
            },
            "patch": {
                "operationId": "torrent-requests_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TorrentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TorrentRequest"
                        }
                    }
                },
                "tags": [
                    "torrent-requests"
                ]
            },
            "delete": {
                "operationId": "torrent-requests_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "torrent-requests"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this torrent request.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/torrent-stats/": {
            "get": {
                "operationId": "torrent-stats_list",
                "description": "",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/TorrentStat"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "torrent-stats"
                ]
            },
            "post": {
                "operationId": "torrent-stats_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TorrentStat"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TorrentStat"
                        }
                    }
                },
                "tags": [
                    "torrent-stats"
                ]
            },
            "parameters": []
        },
        "/torrent-stats/{id}/": {
            "get": {
                "operationId": "torrent-stats_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TorrentStat"
                        }
                    }
                },
                "tags": [
                    "torrent-stats"
                ]
            },
            "put": {
                "operationId": "torrent-stats_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TorrentStat"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TorrentStat"
                        }
                    }
                },
                "tags": [
                    "torrent-stats"
                ]
            },
            "patch": {
                "operationId": "torrent-stats_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TorrentStat"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TorrentStat"
                        }
                    }
                },
                "tags": [
                    "torrent-stats"
                ]
            },
            "delete": {
                "operationId": "torrent-stats_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "torrent-stats"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A UUID string identifying this torrent stats.",
                    "required": true,
                    "type": "string",
                    "format": "uuid"
                }
            ]
        },
        "/torrents/": {
            "get": {
                "operationId": "torrents_list",
                "description": "API That currently only allows Torrents to be viewed, and searched.\nPagination is set at Page Number Pagination, for 35 Torrents at a time for now.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "cut",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "film",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "codec",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "encoded_by",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "container",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "resolution",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "is_source",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "is_3d",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "uploaded_by",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "uploaded_at",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "last_seeded",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "snatch_count",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "reseed_request",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "is_approved",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "moderated_by",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "release_name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "release_group",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "source_media",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "is_scene",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/AdminTorrent"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "torrents"
                ]
            },
            "post": {
                "operationId": "torrents_create",
                "description": "API That currently only allows Torrents to be viewed, and searched.\nPagination is set at Page Number Pagination, for 35 Torrents at a time for now.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AdminTorrent"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/AdminTorrent"
                        }
                    }
                },
                "tags": [
                    "torrents"
                ]
            },
            "parameters": []
        },
        "/torrents/{id}/": {
            "get": {
                "operationId": "torrents_read",
                "description": "API That currently only allows Torrents to be viewed, and searched.\nPagination is set at Page Number Pagination, for 35 Torrents at a time for now.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/AdminTorrent"
                        }
                    }
                },
                "tags": [
                    "torrents"
                ]
            },
            "put": {
                "operationId": "torrents_update",
                "description": "API That currently only allows Torrents to be viewed, and searched.\nPagination is set at Page Number Pagination, for 35 Torrents at a time for now.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AdminTorrent"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/AdminTorrent"
                        }
                    }
                },
                "tags": [
                    "torrents"
                ]
            },
            "patch": {
                "operationId": "torrents_partial_update",
                "description": "API That currently only allows Torrents to be viewed, and searched.\nPagination is set at Page Number Pagination, for 35 Torrents at a time for now.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AdminTorrent"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/AdminTorrent"
                        }
                    }
                },
                "tags": [
                    "torrents"
                ]
            },
            "delete": {
                "operationId": "torrents_delete",
                "description": "API That currently only allows Torrents to be viewed, and searched.\nPagination is set at Page Number Pagination, for 35 Torrents at a time for now.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "torrents"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this torrent.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/tracker-peers/": {
            "get": {
                "operationId": "tracker-peers_list",
                "description": "Peer View 1",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Peer"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "tracker-peers"
                ]
            },
            "post": {
                "operationId": "tracker-peers_create",
                "description": "Peer View 1",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Peer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Peer"
                        }
                    }
                },
                "tags": [
                    "tracker-peers"
                ]
            },
            "parameters": []
        },
        "/tracker-peers/{id}/": {
            "get": {
                "operationId": "tracker-peers_read",
                "description": "Peer View 1",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Peer"
                        }
                    }
                },
                "tags": [
                    "tracker-peers"
                ]
            },
            "put": {
                "operationId": "tracker-peers_update",
                "description": "Peer View 1",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Peer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Peer"
                        }
                    }
                },
                "tags": [
                    "tracker-peers"
                ]
            },
            "patch": {
                "operationId": "tracker-peers_partial_update",
                "description": "Peer View 1",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Peer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Peer"
                        }
                    }
                },
                "tags": [
                    "tracker-peers"
                ]
            },
            "delete": {
                "operationId": "tracker-peers_delete",
                "description": "Peer View 1",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "tracker-peers"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A UUID string identifying this peer.",
                    "required": true,
                    "type": "string",
                    "format": "uuid"
                }
            ]
        },
        "/tracker-swarm/": {
            "get": {
                "operationId": "tracker-swarm_list",
                "description": "Swarm View 1",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Swarm"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "tracker-swarm"
                ]
            },
            "post": {
                "operationId": "tracker-swarm_create",
                "description": "Swarm View 1",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Swarm"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Swarm"
                        }
                    }
                },
                "tags": [
                    "tracker-swarm"
                ]
            },
            "parameters": []
        },
        "/tracker-swarm/{torrent_info_hash}/": {
            "get": {
                "operationId": "tracker-swarm_read",
                "description": "Swarm View 1",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Swarm"
                        }
                    }
                },
                "tags": [
                    "tracker-swarm"
                ]
            },
            "put": {
                "operationId": "tracker-swarm_update",
                "description": "Swarm View 1",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Swarm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Swarm"
                        }
                    }
                },
                "tags": [
                    "tracker-swarm"
                ]
            },
            "patch": {
                "operationId": "tracker-swarm_partial_update",
                "description": "Swarm View 1",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Swarm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Swarm"
                        }
                    }
                },
                "tags": [
                    "tracker-swarm"
                ]
            },
            "delete": {
                "operationId": "tracker-swarm_delete",
                "description": "Swarm View 1",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "tracker-swarm"
                ]
            },
            "parameters": [
                {
                    "name": "torrent_info_hash",
                    "in": "path",
                    "description": "A unique value identifying this swarm.",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/user-profiles/": {
            "get": {
                "operationId": "user-profiles_list",
                "description": "API endpoint that allows users to be viewed and searched only.",
                "parameters": [
                    {
                        "name": "id__in",
                        "in": "query",
                        "description": "Multiple values may be separated by commas.",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "username",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "username__in",
                        "in": "query",
                        "description": "Multiple values may be separated by commas.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "username__startswith",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/PublicUserProfile"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "user-profiles"
                ]
            },
            "parameters": []
        },
        "/user-profiles/{id}/": {
            "get": {
                "operationId": "user-profiles_read",
                "description": "API endpoint that allows users to be viewed and searched only.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/PublicUserProfile"
                        }
                    }
                },
                "tags": [
                    "user-profiles"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this user.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/users/": {
            "get": {
                "operationId": "users_list",
                "description": "API endpoint that allows users to be viewed or edited, by administrators.",
                "parameters": [
                    {
                        "name": "username",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "username__in",
                        "in": "query",
                        "description": "Multiple values may be separated by commas.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "username__startswith",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "user_class__name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "user_class__name__in",
                        "in": "query",
                        "description": "Multiple values may be separated by commas.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "user_class__name__startswith",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "is_staff",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/AdminUserProfile"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "users"
                ]
            },
            "post": {
                "operationId": "users_create",
                "description": "API endpoint that allows users to be viewed or edited, by administrators.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AdminUserProfile"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/AdminUserProfile"
                        }
                    }
                },
                "tags": [
                    "users"
                ]
            },
            "parameters": []
        },
        "/users/{id}/": {
            "get": {
                "operationId": "users_read",
                "description": "API endpoint that allows users to be viewed or edited, by administrators.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/AdminUserProfile"
                        }
                    }
                },
                "tags": [
                    "users"
                ]
            },
            "put": {
                "operationId": "users_update",
                "description": "API endpoint that allows users to be viewed or edited, by administrators.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AdminUserProfile"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/AdminUserProfile"
                        }
                    }
                },
                "tags": [
                    "users"
                ]
            },
            "patch": {
                "operationId": "users_partial_update",
                "description": "API endpoint that allows users to be viewed or edited, by administrators.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AdminUserProfile"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/AdminUserProfile"
                        }
                    }
                },
                "tags": [
                    "users"
                ]
            },
            "delete": {
                "operationId": "users_delete",
                "description": "API endpoint that allows users to be viewed or edited, by administrators.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "users"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this user.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/wiki-articles/": {
            "get": {
                "operationId": "wiki-articles_list",
                "description": "API endpoint that allows Wikis to be viewed only. Note: Body and Body_html is not shown.\nThis Endpoint includes Searching for Title or users.",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/WikiViewListOnly"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "wiki-articles"
                ]
            },
            "parameters": []
        },
        "/wiki-bodies/{id}/": {
            "get": {
                "operationId": "wiki-bodies_read",
                "description": "API endpoint that allows Wiki Body and body ID to be viewed, or Patched only.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WikiBody"
                        }
                    }
                },
                "tags": [
                    "wiki-bodies"
                ]
            },
            "put": {
                "operationId": "wiki-bodies_update",
                "description": "API endpoint that allows Wiki Body and body ID to be viewed, or Patched only.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WikiBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WikiBody"
                        }
                    }
                },
                "tags": [
                    "wiki-bodies"
                ]
            },
            "patch": {
                "operationId": "wiki-bodies_partial_update",
                "description": "API endpoint that allows Wiki Body and body ID to be viewed, or Patched only.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WikiBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WikiBody"
                        }
                    }
                },
                "tags": [
                    "wiki-bodies"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/wikis/": {
            "post": {
                "operationId": "wikis_create",
                "description": "API endpoint that allows Wikis to be created, edited, or deleted only. Options are HEAD, POST, PATCH, DELETE.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WikiCreateUpdateDestroy"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WikiCreateUpdateDestroy"
                        }
                    }
                },
                "tags": [
                    "wikis"
                ]
            },
            "parameters": []
        },
        "/wikis/{id}/": {
            "get": {
                "operationId": "wikis_read",
                "description": "API endpoint that allows Wikis to be created, edited, or deleted only. Options are HEAD, POST, PATCH, DELETE.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WikiCreateUpdateDestroy"
                        }
                    }
                },
                "tags": [
                    "wikis"
                ]
            },
            "put": {
                "operationId": "wikis_update",
                "description": "API endpoint that allows Wikis to be created, edited, or deleted only. Options are HEAD, POST, PATCH, DELETE.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WikiCreateUpdateDestroy"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WikiCreateUpdateDestroy"
                        }
                    }
                },
                "tags": [
                    "wikis"
                ]
            },
            "patch": {
                "operationId": "wikis_partial_update",
                "description": "API endpoint that allows Wikis to be created, edited, or deleted only. Options are HEAD, POST, PATCH, DELETE.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WikiCreateUpdateDestroy"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WikiCreateUpdateDestroy"
                        }
                    }
                },
                "tags": [
                    "wikis"
                ]
            },
            "delete": {
                "operationId": "wikis_delete",
                "description": "API endpoint that allows Wikis to be created, edited, or deleted only. Options are HEAD, POST, PATCH, DELETE.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "wikis"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        }
    },
    "definitions": {
        "ChangePassword": {
            "required": [
                "oldPassword",
                "newPassword"
            ],
            "type": "object",
            "properties": {
                "oldPassword": {
                    "title": "Old password",
                    "type": "string",
                    "minLength": 1
                },
                "newPassword": {
                    "title": "New password",
                    "type": "string",
                    "minLength": 1
                }
            }
        },
        "CollectionComment": {
            "required": [
                "collection",
                "text"
            ],
            "type": "object",
            "properties": {
                "collection": {
                    "title": "Collection",
                    "type": "integer"
                },
                "author": {
                    "title": "Author",
                    "description": "The ID of the user that created this collection comment; if none is provided, defaults to the currently logged in user.",
                    "type": "integer",
                    "readOnly": true
                },
                "authorUsername": {
                    "title": "Author username",
                    "description": "The string representation of the user that created this collection comment; if none is provided, defaults to the currently logged in user.",
                    "type": "string",
                    "readOnly": true
                },
                "text": {
                    "title": "Text",
                    "type": "string",
                    "minLength": 1
                },
                "createdAt": {
                    "title": "Created at",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "modifiedAt": {
                    "title": "Modified at",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                }
            }
        },
        "Collection": {
            "required": [
                "listTitle",
                "listDescription",
                "collectionTags",
                "film"
            ],
            "type": "object",
            "properties": {
                "creatorId": {
                    "title": "Creator id",
                    "description": "The ID of the user that created this collection object; if none is provided,defaults to the currently logged in user.",
                    "type": "integer",
                    "readOnly": true
                },
                "creatorUsername": {
                    "title": "Creator username",
                    "description": "The string representation of the user that created this collection object; if none is provided, defaults to the currently logged in user.",
                    "type": "string",
                    "readOnly": true
                },
                "collectionComments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CollectionComment"
                    },
                    "readOnly": true
                },
                "listId": {
                    "title": "List id",
                    "type": "integer",
                    "readOnly": true
                },
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "listTitle": {
                    "title": "List title",
                    "type": "string",
                    "minLength": 1
                },
                "listDescription": {
                    "title": "List description",
                    "type": "string",
                    "minLength": 1
                },
                "collectionTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "uniqueItems": true
                },
                "film": {
                    "description": "Since we are not making this read_only, we have to give a queryset for the primary key related fieldWe don't want this to be read only, since users need to add or remove a film from a collection.",
                    "type": "array",
                    "items": {
                        "description": "Since we are not making this read_only, we have to give a queryset for the primary key related fieldWe don't want this to be read only, since users need to add or remove a film from a collection.",
                        "type": "integer"
                    },
                    "uniqueItems": true
                },
                "filmTitle": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "readOnly": true,
                    "uniqueItems": true
                },
                "filmLink": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "uri"
                    },
                    "readOnly": true,
                    "uniqueItems": true
                }
            }
        },
        "OwnedUserProfile": {
            "required": [
                "username"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "username": {
                    "title": "Username",
                    "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                    "type": "string",
                    "pattern": "^[\\w.@+-]+$",
                    "maxLength": 150,
                    "minLength": 1
                },
                "email": {
                    "title": "Email address",
                    "type": "string",
                    "format": "email",
                    "maxLength": 254
                },
                "userClass": {
                    "title": "User class",
                    "type": "string",
                    "readOnly": true
                },
                "accountStatus": {
                    "title": "Account status",
                    "type": "string",
                    "enum": [
                        "unconfirmed",
                        "enabled",
                        "disabled"
                    ]
                },
                "isDonor": {
                    "title": "Is donor",
                    "type": "boolean"
                },
                "customTitle": {
                    "title": "Custom title",
                    "type": "string",
                    "maxLength": 256
                },
                "avatarUrl": {
                    "title": "Avatar url",
                    "type": "string",
                    "format": "uri",
                    "maxLength": 512
                },
                "profileDescription": {
                    "title": "Profile description",
                    "type": "string"
                },
                "averageSeedingSize": {
                    "title": "Average seeding size",
                    "type": "integer",
                    "maximum": 9223372036854775807,
                    "minimum": -9223372036854775808
                },
                "ircKey": {
                    "title": "Irc key",
                    "type": "string",
                    "maxLength": 128
                },
                "announceKey": {
                    "title": "Announce key",
                    "type": "string",
                    "readOnly": true
                },
                "inviteCount": {
                    "title": "Invite count",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "bytesUploaded": {
                    "title": "Bytes uploaded",
                    "type": "integer",
                    "maximum": 9223372036854775807,
                    "minimum": -9223372036854775808
                },
                "bytesDownloaded": {
                    "title": "Bytes downloaded",
                    "type": "integer",
                    "maximum": 9223372036854775807,
                    "minimum": -9223372036854775808
                },
                "lastSeeded": {
                    "title": "Last seeded",
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "FilmComment": {
            "required": [
                "film",
                "text"
            ],
            "type": "object",
            "properties": {
                "film": {
                    "title": "Film",
                    "type": "integer"
                },
                "author": {
                    "title": "Author",
                    "description": "The ID of the user that created this film comment; if none is provided, defaults to the currently logged in user.",
                    "type": "integer",
                    "readOnly": true
                },
                "authorUsername": {
                    "title": "Author username",
                    "description": "The string representation of the user that created this film comment; if none is provided, defaults to the currently logged in user.",
                    "type": "string",
                    "readOnly": true
                },
                "text": {
                    "title": "Text",
                    "type": "string",
                    "minLength": 1
                },
                "createdAt": {
                    "title": "Created at",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "modifiedAt": {
                    "title": "Modified at",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                }
            }
        },
        "AdminFilm": {
            "required": [
                "title",
                "year",
                "posterUrl",
                "lists",
                "trailerUrl",
                "trailerType",
                "description"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "title": {
                    "title": "Title",
                    "type": "string",
                    "maxLength": 1024,
                    "minLength": 1
                },
                "year": {
                    "title": "Year",
                    "type": "integer",
                    "maximum": 32767,
                    "minimum": 0
                },
                "imdbId": {
                    "title": "Imdb id",
                    "type": "string",
                    "readOnly": true
                },
                "tmdbId": {
                    "title": "Tmdb id",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                },
                "posterUrl": {
                    "title": "Poster url",
                    "type": "string",
                    "format": "uri",
                    "maxLength": 200,
                    "minLength": 1
                },
                "fanartUrl": {
                    "title": "Fanart url",
                    "type": "string",
                    "format": "uri",
                    "maxLength": 200
                },
                "lists": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "uniqueItems": true
                },
                "filmComments": {
                    "description": "Get all fields from the comment serializer and add them as a nested child.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FilmComment"
                    },
                    "readOnly": true
                },
                "trailerUrl": {
                    "title": "Trailer url",
                    "type": "string",
                    "format": "uri",
                    "maxLength": 200,
                    "minLength": 1
                },
                "trailerType": {
                    "title": "Trailer type",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "durationInMinutes": {
                    "title": "Duration in minutes",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                },
                "description": {
                    "title": "Description",
                    "type": "string",
                    "minLength": 1
                },
                "moderationNotes": {
                    "title": "Moderation notes",
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "uniqueItems": true
                }
            }
        },
        "ForumGroupItem": {
            "required": [
                "name",
                "sortOrder"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 1
                },
                "sortOrder": {
                    "title": "Sort order",
                    "type": "integer",
                    "maximum": 32767,
                    "minimum": 0
                }
            }
        },
        "ForumPostForIndex": {
            "title": "Latest post",
            "required": [
                "thread"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "author": {
                    "title": "Author",
                    "type": "integer"
                },
                "thread": {
                    "title": "Thread",
                    "type": "integer"
                },
                "threadTitle": {
                    "title": "Thread title",
                    "type": "string",
                    "readOnly": true
                },
                "createdAt": {
                    "title": "Created at",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                }
            }
        },
        "ForumTopicForIndex": {
            "required": [
                "group",
                "sortOrder",
                "name",
                "description",
                "latestPost"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "group": {
                    "title": "Group",
                    "type": "integer"
                },
                "sortOrder": {
                    "title": "Sort order",
                    "type": "integer",
                    "maximum": 32767,
                    "minimum": 0
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 1
                },
                "description": {
                    "title": "Description",
                    "type": "string",
                    "maxLength": 1024,
                    "minLength": 1
                },
                "minimumUserClass": {
                    "title": "Minimum user class",
                    "type": "integer"
                },
                "numberOfThreads": {
                    "title": "Number of threads",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "numberOfPosts": {
                    "title": "Number of posts",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "latestPost": {
                    "$ref": "#/definitions/ForumPostForIndex"
                }
            }
        },
        "ForumIndex": {
            "required": [
                "name",
                "sortOrder"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 1
                },
                "sortOrder": {
                    "title": "Sort order",
                    "type": "integer",
                    "maximum": 32767,
                    "minimum": 0
                },
                "topics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ForumTopicForIndex"
                    },
                    "readOnly": true
                },
                "topicCount": {
                    "title": "Topic count",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "ForumPostItem": {
            "required": [
                "body",
                "thread"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "author": {
                    "title": "Author",
                    "type": "integer",
                    "readOnly": true
                },
                "createdAt": {
                    "title": "Created at",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "modifiedAt": {
                    "title": "Modified at",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "modifiedBy": {
                    "title": "Modified by",
                    "type": "integer",
                    "readOnly": true
                },
                "body": {
                    "title": "Body",
                    "type": "string",
                    "minLength": 1
                },
                "thread": {
                    "title": "Thread",
                    "type": "integer"
                },
                "position": {
                    "title": "Position",
                    "type": "integer",
                    "readOnly": true
                },
                "total": {
                    "title": "Total",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "ForumReport": {
            "required": [
                "reason"
            ],
            "type": "object",
            "properties": {
                "reportingUser": {
                    "title": "Reporting user",
                    "type": "integer"
                },
                "reportedAt": {
                    "title": "Reported at",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "reason": {
                    "title": "Reason",
                    "type": "string",
                    "maxLength": 1024,
                    "minLength": 1
                },
                "thread": {
                    "title": "Thread",
                    "type": "integer"
                },
                "post": {
                    "title": "Post",
                    "type": "integer"
                },
                "resolved": {
                    "title": "Resolved",
                    "type": "boolean"
                },
                "resolvedBy": {
                    "title": "Resolved by",
                    "type": "integer"
                },
                "dateResolved": {
                    "title": "Date resolved",
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "ForumGroupForTopic": {
            "title": "Groups",
            "required": [
                "name"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 1
                }
            },
            "readOnly": true
        },
        "ForumTopicForThread": {
            "title": "Topics",
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "group": {
                    "title": "Group",
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "readOnly": true
                }
            },
            "readOnly": true
        },
        "ForumThreadIndex": {
            "required": [
                "title",
                "topic",
                "posts"
            ],
            "type": "object",
            "properties": {
                "groups": {
                    "$ref": "#/definitions/ForumGroupForTopic"
                },
                "topics": {
                    "$ref": "#/definitions/ForumTopicForThread"
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "title": {
                    "title": "Title",
                    "type": "string",
                    "maxLength": 1024,
                    "minLength": 1
                },
                "topic": {
                    "title": "Topic",
                    "type": "integer"
                },
                "isLocked": {
                    "title": "Is locked",
                    "type": "boolean"
                },
                "isSticky": {
                    "title": "Is sticky",
                    "type": "boolean"
                },
                "createdBy": {
                    "title": "Created by",
                    "type": "integer",
                    "readOnly": true
                },
                "createdAt": {
                    "title": "Created at",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "modifiedBy": {
                    "title": "Modified by",
                    "type": "integer",
                    "readOnly": true
                },
                "numberOfPosts": {
                    "title": "Number of posts",
                    "type": "integer",
                    "readOnly": true
                },
                "posts": {
                    "title": "Posts",
                    "type": "string"
                }
            }
        },
        "ForumThreadItem": {
            "required": [
                "title",
                "topic"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "createdBy": {
                    "title": "Created by",
                    "type": "integer",
                    "readOnly": true
                },
                "modifiedBy": {
                    "title": "Modified by",
                    "type": "integer",
                    "readOnly": true
                },
                "modifiedAt": {
                    "title": "Modified at",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "title": {
                    "title": "Title",
                    "type": "string",
                    "maxLength": 1024,
                    "minLength": 1
                },
                "topic": {
                    "title": "Topic",
                    "type": "integer"
                },
                "isLocked": {
                    "title": "Is locked",
                    "type": "boolean"
                },
                "isSticky": {
                    "title": "Is sticky",
                    "type": "boolean"
                },
                "isArchived": {
                    "title": "Is archived",
                    "type": "boolean"
                }
            }
        },
        "ForumThreadSubscription": {
            "required": [
                "thread"
            ],
            "type": "object",
            "properties": {
                "user": {
                    "title": "User",
                    "type": "string",
                    "readOnly": true
                },
                "thread": {
                    "title": "Thread",
                    "type": "integer"
                }
            }
        },
        "ForumTopicIndex": {
            "required": [
                "group",
                "name",
                "description",
                "threads"
            ],
            "type": "object",
            "properties": {
                "groups": {
                    "$ref": "#/definitions/ForumGroupForTopic"
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "group": {
                    "title": "Group",
                    "type": "integer"
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 1
                },
                "description": {
                    "title": "Description",
                    "type": "string",
                    "maxLength": 1024,
                    "minLength": 1
                },
                "minimumUserClass": {
                    "title": "Minimum user class",
                    "type": "integer"
                },
                "threads": {
                    "title": "Threads",
                    "type": "string"
                },
                "latestPost": {
                    "title": "Latest post",
                    "type": "integer"
                },
                "numberOfThreads": {
                    "title": "Number of threads",
                    "type": "integer",
                    "readOnly": true
                },
                "numberOfPosts": {
                    "title": "Number of posts",
                    "type": "integer",
                    "readOnly": true
                }
            }
        },
        "ForumTopicItem": {
            "required": [
                "group",
                "name",
                "description"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "group": {
                    "title": "Group",
                    "type": "integer"
                },
                "sortOrder": {
                    "title": "Sort order",
                    "type": "integer",
                    "maximum": 32767,
                    "minimum": 0
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 1
                },
                "description": {
                    "title": "Description",
                    "type": "string",
                    "maxLength": 1024,
                    "minLength": 1
                },
                "minimumUserClass": {
                    "title": "Minimum user class",
                    "type": "integer"
                },
                "numberOfThreads": {
                    "title": "Number of threads",
                    "type": "integer",
                    "readOnly": true
                },
                "numberOfPosts": {
                    "title": "Number of posts",
                    "type": "integer",
                    "readOnly": true
                },
                "latestPost": {
                    "title": "Latest post",
                    "type": "integer"
                }
            }
        },
        "Group": {
            "required": [
                "name"
            ],
            "type": "object",
            "properties": {
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 80,
                    "minLength": 1
                }
            }
        },
        "Invite": {
            "required": [
                "email"
            ],
            "type": "object",
            "properties": {
                "email": {
                    "title": "Email",
                    "type": "string",
                    "format": "email",
                    "maxLength": 254,
                    "minLength": 1
                },
                "key": {
                    "title": "Key",
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                },
                "createdAt": {
                    "title": "Created at",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "offeredById": {
                    "title": "Offered by id",
                    "type": "integer",
                    "readOnly": true
                },
                "offeredByUsername": {
                    "title": "Offered by username",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "JWT": {
            "required": [
                "username",
                "password"
            ],
            "type": "object",
            "properties": {
                "username": {
                    "title": "Username",
                    "type": "string",
                    "minLength": 1
                },
                "password": {
                    "title": "Password",
                    "type": "string",
                    "minLength": 1
                }
            }
        },
        "News": {
            "required": [
                "body",
                "thread"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "author": {
                    "title": "Author",
                    "type": "integer"
                },
                "body": {
                    "title": "Body",
                    "type": "string",
                    "minLength": 1
                },
                "createdAt": {
                    "title": "Created at",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "boolean"
                },
                "modifiedBy": {
                    "title": "Modified by",
                    "type": "integer",
                    "readOnly": true
                },
                "modifiedAt": {
                    "title": "Modified at",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "modifiedCount": {
                    "title": "Modified count",
                    "type": "integer",
                    "readOnly": true
                },
                "thread": {
                    "title": "Thread",
                    "type": "integer"
                },
                "threadTitle": {
                    "title": "Thread title",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "NewUser": {
            "required": [
                "username",
                "email",
                "password"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "username": {
                    "title": "Username",
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 1
                },
                "email": {
                    "title": "Email",
                    "type": "string",
                    "format": "email",
                    "minLength": 1
                },
                "password": {
                    "title": "Password",
                    "type": "string",
                    "minLength": 8
                },
                "token": {
                    "title": "Token",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "RefreshJSONWebToken": {
            "required": [
                "token"
            ],
            "type": "object",
            "properties": {
                "token": {
                    "title": "Token",
                    "type": "string",
                    "minLength": 1
                }
            }
        },
        "VerifyJSONWebToken": {
            "required": [
                "token"
            ],
            "type": "object",
            "properties": {
                "token": {
                    "title": "Token",
                    "type": "string",
                    "minLength": 1
                }
            }
        },
        "TorrentClient": {
            "required": [
                "peerIdPrefix",
                "name"
            ],
            "type": "object",
            "properties": {
                "peerIdPrefix": {
                    "title": "Peer id prefix",
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 1
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 1
                },
                "isWhitelisted": {
                    "title": "Is whitelisted",
                    "type": "boolean"
                },
                "notes": {
                    "title": "Notes",
                    "type": "string"
                }
            }
        },
        "TorrentComment": {
            "required": [
                "torrent",
                "text"
            ],
            "type": "object",
            "properties": {
                "torrent": {
                    "title": "Torrent",
                    "type": "integer"
                },
                "torrentName": {
                    "title": "Torrent name",
                    "description": "Read only field that shows the torrent release name.",
                    "type": "string",
                    "readOnly": true
                },
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "filmId": {
                    "title": "Film id",
                    "type": "string",
                    "readOnly": true
                },
                "author": {
                    "title": "Author",
                    "description": "The ID of the user that created this film comment; if none is provided, defaults to the currently logged in user.",
                    "type": "integer",
                    "readOnly": true
                },
                "authorUsername": {
                    "title": "Author username",
                    "description": "The string representation of the user that created this film comment; if none is provided, defaults to the currently logged in user.",
                    "type": "string",
                    "readOnly": true
                },
                "text": {
                    "title": "Text",
                    "type": "string",
                    "minLength": 1
                },
                "createdAt": {
                    "title": "Created at",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "modifiedAt": {
                    "title": "Modified at",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                }
            }
        },
        "TorrentRequest": {
            "required": [
                "filmTitle",
                "description",
                "releaseName"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "filmTitle": {
                    "title": "Film title",
                    "type": "string",
                    "maxLength": 1024,
                    "minLength": 1
                },
                "filmYear": {
                    "title": "Film year",
                    "type": "integer",
                    "maximum": 32767,
                    "minimum": 0
                },
                "description": {
                    "title": "Description",
                    "type": "string",
                    "minLength": 1
                },
                "releaseName": {
                    "title": "Release name",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "requesterFollowedThrough": {
                    "title": "Requester followed through",
                    "type": "boolean"
                },
                "isSource": {
                    "title": "Is source",
                    "type": "boolean"
                },
                "createdBy": {
                    "title": "Created by",
                    "type": "integer"
                },
                "format": {
                    "title": "Format",
                    "type": "string",
                    "readOnly": true
                },
                "imdb": {
                    "title": "Imdb",
                    "type": "integer"
                },
                "fillingTorrent": {
                    "title": "Filling torrent",
                    "type": "integer"
                },
                "sourceMedia": {
                    "title": "Source media",
                    "type": "string"
                },
                "resolution": {
                    "title": "Resolution",
                    "type": "string"
                },
                "codec": {
                    "title": "Codec",
                    "type": "string"
                },
                "container": {
                    "title": "Container",
                    "type": "string"
                }
            }
        },
        "TorrentStat": {
            "required": [
                "user",
                "torrent"
            ],
            "type": "object",
            "properties": {
                "user": {
                    "title": "User",
                    "type": "integer"
                },
                "torrent": {
                    "title": "Torrent",
                    "type": "integer"
                },
                "bytesUploaded": {
                    "title": "Bytes uploaded",
                    "type": "integer",
                    "maximum": 9223372036854775807,
                    "minimum": -9223372036854775808
                },
                "bytesDownloaded": {
                    "title": "Bytes downloaded",
                    "type": "integer",
                    "maximum": 9223372036854775807,
                    "minimum": -9223372036854775808
                },
                "firstSnatched": {
                    "title": "First snatched",
                    "type": "string",
                    "format": "date-time"
                },
                "lastSnatched": {
                    "title": "Last snatched",
                    "type": "string",
                    "format": "date-time"
                },
                "snatchCount": {
                    "title": "Snatch count",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                },
                "lastSeeded": {
                    "title": "Last seeded",
                    "type": "string",
                    "format": "date-time"
                },
                "seedTime": {
                    "title": "Seed time",
                    "type": "number"
                },
                "ratio": {
                    "title": "Ratio",
                    "type": "string",
                    "readOnly": true
                },
                "hnrCountdownStartedAt": {
                    "title": "Hnr countdown started at",
                    "type": "string",
                    "format": "date-time"
                },
                "isHitAndRun": {
                    "title": "Is hit and run",
                    "type": "boolean"
                }
            }
        },
        "AdminMediainfo": {
            "title": "Mediainfo",
            "required": [
                "text",
                "displayAspectRatio",
                "bitRate"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "text": {
                    "title": "Text",
                    "type": "string",
                    "minLength": 1
                },
                "runtime": {
                    "title": "Runtime",
                    "type": "number",
                    "readOnly": true
                },
                "resolutionWidth": {
                    "title": "Resolution width",
                    "type": "integer",
                    "readOnly": true
                },
                "resolutionHeight": {
                    "title": "Resolution height",
                    "type": "integer",
                    "readOnly": true
                },
                "displayAspectRatio": {
                    "title": "Display aspect ratio",
                    "type": "string",
                    "maxLength": 16,
                    "minLength": 1
                },
                "bitRate": {
                    "title": "Bit rate",
                    "type": "string",
                    "maxLength": 16,
                    "minLength": 1
                },
                "frameRate": {
                    "title": "Frame rate",
                    "type": "string",
                    "format": "decimal"
                },
                "hasChapters": {
                    "title": "Has chapters",
                    "type": "boolean"
                },
                "isDxvaCompliant": {
                    "title": "Is dxva compliant",
                    "type": "boolean"
                },
                "isQualityEncode": {
                    "title": "Is quality encode",
                    "type": "boolean"
                }
            }
        },
        "AdminTorrent": {
            "required": [
                "releaseName",
                "releaseGroup",
                "infoHash",
                "fileList",
                "nfo",
                "mediainfo",
                "description",
                "comments"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "filmId": {
                    "title": "Film id",
                    "type": "string",
                    "readOnly": true
                },
                "cut": {
                    "title": "Cut",
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 1
                },
                "codec": {
                    "title": "Codec",
                    "type": "string"
                },
                "container": {
                    "title": "Container",
                    "type": "string"
                },
                "resolution": {
                    "title": "Resolution",
                    "type": "string"
                },
                "sourceMedia": {
                    "title": "Source media",
                    "type": "string"
                },
                "isSource": {
                    "title": "Is source",
                    "type": "boolean"
                },
                "is3d": {
                    "title": "Is 3d",
                    "type": "boolean"
                },
                "size": {
                    "title": "Size",
                    "type": "string",
                    "readOnly": true
                },
                "format": {
                    "title": "Format",
                    "type": "string",
                    "readOnly": true
                },
                "uploadedBy": {
                    "title": "Uploaded by",
                    "type": "integer"
                },
                "uploadedAt": {
                    "title": "Uploaded at",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "lastSeeded": {
                    "title": "Last seeded",
                    "type": "string",
                    "format": "date-time"
                },
                "snatchCount": {
                    "title": "Snatch count",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                },
                "reseedRequest": {
                    "title": "Reseed request",
                    "type": "integer"
                },
                "isAcceptingReseedRequests": {
                    "title": "Is accepting reseed requests",
                    "type": "string",
                    "readOnly": true
                },
                "isApproved": {
                    "title": "Is approved",
                    "type": "boolean",
                    "enum": [
                        null,
                        true,
                        false
                    ]
                },
                "moderatedBy": {
                    "title": "Moderated by",
                    "type": "integer"
                },
                "releaseName": {
                    "title": "Release name",
                    "type": "string",
                    "maxLength": 1024,
                    "minLength": 1
                },
                "releaseGroup": {
                    "title": "Release group",
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 1
                },
                "isScene": {
                    "title": "Is scene",
                    "type": "boolean"
                },
                "infoHash": {
                    "title": "Info hash",
                    "type": "string",
                    "minLength": 1
                },
                "fileList": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "nfo": {
                    "title": "Nfo",
                    "type": "string",
                    "minLength": 1
                },
                "mediainfo": {
                    "$ref": "#/definitions/AdminMediainfo"
                },
                "description": {
                    "title": "Description",
                    "type": "string",
                    "minLength": 1
                },
                "comments": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "uniqueItems": true
                }
            }
        },
        "Peer": {
            "required": [
                "userAnnounceKey",
                "ipAddress",
                "port",
                "peerId",
                "userAgent",
                "bytesRemaining",
                "swarm"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                },
                "userAnnounceKey": {
                    "title": "User announce key",
                    "type": "string",
                    "maxLength": 36,
                    "minLength": 1
                },
                "ipAddress": {
                    "title": "Ip address",
                    "type": "string",
                    "minLength": 1
                },
                "port": {
                    "title": "Port",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                },
                "peerId": {
                    "title": "Peer id",
                    "type": "string",
                    "maxLength": 40,
                    "minLength": 1
                },
                "userAgent": {
                    "title": "User agent",
                    "type": "string",
                    "minLength": 1
                },
                "compactBytesRepr": {
                    "title": "Compact bytes repr",
                    "description": "The compact representation of this peer, sent as bytes to announcing torrent clients",
                    "type": "string",
                    "readOnly": true
                },
                "bytesUploaded": {
                    "title": "Bytes uploaded",
                    "type": "integer",
                    "maximum": 9223372036854775807,
                    "minimum": -9223372036854775808
                },
                "bytesDownloaded": {
                    "title": "Bytes downloaded",
                    "type": "integer",
                    "maximum": 9223372036854775807,
                    "minimum": -9223372036854775808
                },
                "bytesRemaining": {
                    "title": "Bytes remaining",
                    "type": "integer",
                    "maximum": 9223372036854775807,
                    "minimum": -9223372036854775808
                },
                "complete": {
                    "title": "Complete",
                    "type": "boolean"
                },
                "firstAnnounce": {
                    "title": "First announce",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "lastAnnounce": {
                    "title": "Last announce",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "swarm": {
                    "title": "Swarm",
                    "type": "string"
                }
            }
        },
        "Swarm": {
            "required": [
                "torrentInfoHash"
            ],
            "type": "object",
            "properties": {
                "torrentInfoHash": {
                    "title": "Torrent info hash",
                    "type": "string",
                    "maxLength": 40,
                    "minLength": 1
                }
            }
        },
        "PublicUserProfile": {
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "username": {
                    "title": "Username",
                    "type": "string",
                    "readOnly": true
                },
                "email": {
                    "title": "Email address",
                    "type": "string",
                    "format": "email",
                    "maxLength": 254
                },
                "userClass": {
                    "title": "User class",
                    "type": "string",
                    "readOnly": true
                },
                "accountStatus": {
                    "title": "Account status",
                    "type": "string",
                    "enum": [
                        "unconfirmed",
                        "enabled",
                        "disabled"
                    ]
                },
                "isDonor": {
                    "title": "Is donor",
                    "type": "boolean"
                },
                "customTitle": {
                    "title": "Custom title",
                    "type": "string",
                    "maxLength": 256
                },
                "avatarUrl": {
                    "title": "Avatar url",
                    "type": "string",
                    "format": "uri",
                    "maxLength": 512
                },
                "profileDescription": {
                    "title": "Profile description",
                    "type": "string"
                },
                "averageSeedingSize": {
                    "title": "Average seeding size",
                    "type": "integer",
                    "maximum": 9223372036854775807,
                    "minimum": -9223372036854775808
                },
                "bytesUploaded": {
                    "title": "Bytes uploaded",
                    "type": "integer",
                    "maximum": 9223372036854775807,
                    "minimum": -9223372036854775808
                },
                "bytesDownloaded": {
                    "title": "Bytes downloaded",
                    "type": "integer",
                    "maximum": 9223372036854775807,
                    "minimum": -9223372036854775808
                },
                "lastSeeded": {
                    "title": "Last seeded",
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "AdminUserProfile": {
            "required": [
                "username",
                "password"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "userClass": {
                    "title": "User class",
                    "type": "string",
                    "readOnly": true
                },
                "userClassRank": {
                    "title": "User class rank",
                    "type": "integer",
                    "readOnly": true
                },
                "lastLogin": {
                    "title": "Last login",
                    "type": "string",
                    "format": "date-time"
                },
                "username": {
                    "title": "Username",
                    "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                    "type": "string",
                    "pattern": "^[\\w.@+-]+$",
                    "maxLength": 150,
                    "minLength": 1
                },
                "email": {
                    "title": "Email address",
                    "type": "string",
                    "format": "email",
                    "maxLength": 254
                },
                "isSuperuser": {
                    "title": "Superuser status",
                    "description": "Designates that this user has all permissions without explicitly assigning them.",
                    "type": "boolean"
                },
                "password": {
                    "title": "Password",
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 1
                },
                "isStaff": {
                    "title": "Staff status",
                    "description": "Designates whether the user can log into this admin site.",
                    "type": "boolean"
                },
                "isActive": {
                    "title": "Active",
                    "description": "Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                    "type": "boolean"
                },
                "dateJoined": {
                    "title": "Date joined",
                    "type": "string",
                    "format": "date-time"
                },
                "isDonor": {
                    "title": "Is donor",
                    "type": "boolean"
                },
                "accountStatus": {
                    "title": "Account status",
                    "type": "string",
                    "enum": [
                        "unconfirmed",
                        "enabled",
                        "disabled"
                    ]
                },
                "failedLoginAttempts": {
                    "title": "Failed login attempts",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "avatarUrl": {
                    "title": "Avatar url",
                    "type": "string",
                    "format": "uri",
                    "maxLength": 512
                },
                "customTitle": {
                    "title": "Custom title",
                    "type": "string",
                    "maxLength": 256
                },
                "profileDescription": {
                    "title": "Profile description",
                    "type": "string"
                },
                "staffNotes": {
                    "title": "Staff notes",
                    "type": "string",
                    "minLength": 1
                },
                "ircKey": {
                    "title": "Irc key",
                    "type": "string",
                    "maxLength": 128
                },
                "inviteCount": {
                    "title": "Invite count",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "bytesUploaded": {
                    "title": "Bytes uploaded",
                    "type": "integer",
                    "maximum": 9223372036854775807,
                    "minimum": -9223372036854775808
                },
                "bytesDownloaded": {
                    "title": "Bytes downloaded",
                    "type": "integer",
                    "maximum": 9223372036854775807,
                    "minimum": -9223372036854775808
                },
                "lastSeeded": {
                    "title": "Last seeded",
                    "type": "string",
                    "format": "date-time"
                },
                "averageSeedingSize": {
                    "title": "Average seeding size",
                    "type": "integer",
                    "maximum": 9223372036854775807,
                    "minimum": -9223372036854775808
                },
                "announceKey": {
                    "title": "Announce key",
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                },
                "invitedBy": {
                    "title": "Invited by",
                    "type": "integer"
                },
                "watchQueue": {
                    "title": "Watch queue",
                    "type": "integer",
                    "readOnly": true
                },
                "userPermissions": {
                    "description": "Specific permissions for this user.",
                    "type": "array",
                    "items": {
                        "description": "Specific permissions for this user.",
                        "type": "integer"
                    },
                    "uniqueItems": true
                },
                "torrents": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "readOnly": true,
                    "uniqueItems": true
                }
            }
        },
        "WikiViewListOnly": {
            "required": [
                "title"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "createdAt": {
                    "title": "Created at",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "createdBy": {
                    "title": "Created by",
                    "type": "integer"
                },
                "modifiedAt": {
                    "title": "Modified at",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "modifiedBy": {
                    "title": "Modified by",
                    "type": "integer"
                },
                "title": {
                    "title": "Title",
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 1
                },
                "readAccessMinimumUserClass": {
                    "title": "Read access minimum user class",
                    "type": "integer"
                },
                "writeAccessMinimumUserClass": {
                    "title": "Write access minimum user class",
                    "type": "integer"
                }
            }
        },
        "WikiBody": {
            "required": [
                "body"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "body": {
                    "title": "Body",
                    "type": "string",
                    "minLength": 1
                },
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                }
            }
        },
        "WikiCreateUpdateDestroy": {
            "required": [
                "title",
                "body"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "createdAt": {
                    "title": "Created at",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "createdBy": {
                    "title": "Created by",
                    "type": "integer"
                },
                "modifiedAt": {
                    "title": "Modified at",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "modifiedBy": {
                    "title": "Modified by",
                    "type": "integer"
                },
                "title": {
                    "title": "Title",
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 1
                },
                "body": {
                    "title": "Body",
                    "type": "string",
                    "minLength": 1
                },
                "readAccessMinimumUserClass": {
                    "title": "Read access minimum user class",
                    "type": "integer"
                },
                "writeAccessMinimumUserClass": {
                    "title": "Write access minimum user class",
                    "type": "integer"
                }
            }
        }
    }
}
