image: python:3.6

services:
 - postgres
 - docker:dind
 - redis:latest

stages:
 - test
 - mirror
 - release
 - deploy

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache"
  DB_NAME: postgres
  DB_USER: postgres
  DB_HOST: postgres
  DB_PASS: postgres
  DB_PORT: 5432
  DEBUG: "True"
  REDIS_URL: "redis://redis:6379"

cache:
  paths:
    - .cache/
    - venv/

before_script:
  - pip install virtualenv
  - virtualenv venv
  - source venv/bin/activate
  - cd backend
  - pip install -r requirements.txt
  - pip install -r testing_requirements.txt

python_linter:
  stage: test
  script:
    - invoke run-python-linter
  allow_failure: true # for now

python_tests:
  stage: test
  script:
    - invoke make-migrations
    - invoke migrate
    - invoke foundation
    - invoke fixtures
    - invoke run-python-tests --coverage

variables:
  MIRROR_REPOSITORY: "git@github.com:TheSaltman/jumpcut.git"

mirror-github:
  stage: mirror
  before_script:
    - echo hi
  tags:
    - github
  cache: {}
  script:
    # Do a mirror clone of the repository
    # Mirror push it to the destination
    - cd $CI_HOME
    - git clone --mirror $CI_REPOSITORY_URL
    - cd $CI_PROJECT_NAME
    - ssh -i key "$SSH_DESTINATION"
    - git push --mirror $MIRROR_REPOSITORY
    # Cleanup
    - cd ..; rm -rf $CI_PROJECT_NAME.git
  allow_failure: true

## TODO frontend linter/tests?

release_develop:
  image: docker:stable
  stage: release
  cache: {}
  before_script:
    - docker login -u gitlab-ci-token -p $CI_PASS $CI_REGISTRY
  script:
    - deployment/docker_build.sh $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
  only:
    - master

deploy-develop:
  stage: deploy
  cache: {}
  before_script:
    # https://docs.gitlab.com/ee/ci/ssh_keys/
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' > key
    - chmod 700 key
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - ssh -i key "$SSH_DESTINATION"
  only:
    - master
